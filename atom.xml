<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>How-To-How-To</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://howtohowto.github.io/"/>
  <updated>2018-08-01T13:35:51.642Z</updated>
  <id>http://howtohowto.github.io/</id>
  
  <author>
    <name>Qing</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>How to design 系列：从最强大的插件开始 Sketch</title>
    <link href="http://howtohowto.github.io/2018/08/01/How-to-design-%E7%B3%BB%E5%88%97%EF%BC%9A%E4%BB%8E%E6%9C%80%E5%BC%BA%E5%A4%A7%E7%9A%84%E6%8F%92%E4%BB%B6%E5%BC%80%E5%A7%8B-Sketch/"/>
    <id>http://howtohowto.github.io/2018/08/01/How-to-design-系列：从最强大的插件开始-Sketch/</id>
    <published>2018-08-01T02:10:10.000Z</published>
    <updated>2018-08-01T13:35:51.642Z</updated>
    
    <content type="html"><![CDATA[<p>这是 <strong>How to design</strong> 系列的第一篇，以最简单的方式开始基于Sketch学习App和Web设计。</p><p>和其他的Sketch教程不同，How to系列的目标，是从最专业的方式开始学习使用Sketch，从一开始我们就把这个设计工具打造成最适合UI产出的工具。</p><p><img src="sketch_plugins.jpgpcrqo1mau.bkt.clouddn.com" alt="sketch_plugins"></p><h2 id="Sketch-VS-Photoshop设计"><a href="#Sketch-VS-Photoshop设计" class="headerlink" title="Sketch VS Photoshop设计"></a>Sketch VS Photoshop设计</h2><p>我从2014年底开始使用 Sketch 3，之前我的产品经过Axure的原型制作之后，往往需要经过漫长的Photoshop设计图制作过程。</p><p>而近些年Sketch的熟练运用，让Axure和Coding之间的这个设计过程缩短到几乎可以忽略不计了。基于Axure的线框图增强设计感，具象之前的产品；如果产品理顺了的话，设计UI在Sketch的帮助下产出简直是飞速的。</p><p>Sketch的开发团队 <strong>Bohemian Coding</strong> 是这样定位 Sketch：</p><blockquote><p>“Sketch 是一个拥有美观界面和强力功能的专业矢量绘图软件。我们打算为图形设计者们构建一个更好的应用。不只是借鉴，而且是超越。”</p></blockquote><p><img src="design_with_sketch_3.pngpcrqo1mau.bkt.clouddn.com" alt="design_with_sketch_3"></p><h2 id="正式开始"><a href="#正式开始" class="headerlink" title="正式开始"></a>正式开始</h2><p>使用Sketch，最需要的就是插件，而Sketch上最强大的插件非 <strong>Sketch Runner</strong> 莫属。</p><p>Sketch Runner 是一款在 <em>Sketch HackDay</em> 上诞生的一个新的插件， 它就和 Alfred (或者 macOS 的 Spotlight 搜索)很像。Sketch Runner 应该说是一款效率插件，通过在独有的操作框输入一些关键词，就可以完成绝大多数用 Sketch 进行设计时的操作。</p><p>使用它就不需要为寻找各种菜单里的功能而烦恼，也可以让你不用在记住那一个个的快捷键，它以键入关键词的方式，大大的简化了你的工作流程。可以说这款插件是设计效率的「春天」。</p><p>官方下载：<a href="http://sketchrunner.com/" target="_blank" rel="noopener">http://sketchrunner.com/</a></p><p><img src="runner_plugin.pngpcrqo1mau.bkt.clouddn.com" alt="runner_plugin"></p><h2 id="使用Sketch-Runner"><a href="#使用Sketch-Runner" class="headerlink" title="使用Sketch Runner"></a>使用Sketch Runner</h2><h4 id="Runner插件安装"><a href="#Runner插件安装" class="headerlink" title="Runner插件安装"></a>Runner插件安装</h4><p>官网下载压缩包之后，双击.plugin文件，就会自动安装好插件了。</p><p>安装后打开Sketch，按下 <code>Command+&#39;</code> 就可以启动 Sketch Runner。</p><p>可以看到和macOS自带的Spotlight搜索几乎一样的Runner搜索框。</p><h4 id="Runner界面"><a href="#Runner界面" class="headerlink" title="Runner界面"></a>Runner界面</h4><p>Sketch Runner 由分类、搜索、设置三个部分组成。<br>搜索框顶部有 6 个分类分别是：</p><ol><li>run（运行）</li><li>goto（跳转到）</li><li>insert（插入）</li><li>create（创建）</li><li>apply（应用）</li><li>install（安装）</li></ol><p><img src="sketch_runner_tab.pngpcrqo1mau.bkt.clouddn.com" alt="sketch_runner_tab"></p><p>在调出主界面后，使用键盘上的 Tab 键 可以快速切换上方的分类。</p><p>接下来我们就可以使用install来安装其他的Sketch插件了。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;这是 &lt;strong&gt;How to design&lt;/strong&gt; 系列的第一篇，以最简单的方式开始基于Sketch学习App和Web设计。&lt;/p&gt;
&lt;p&gt;和其他的Sketch教程不同，How to系列的目标，是从最专业的方式开始学习使用Sketch，从一开始我们就把
      
    
    </summary>
    
    
      <category term="sketch" scheme="http://howtohowto.github.io/tags/sketch/"/>
    
  </entry>
  
  <entry>
    <title>CentOS 7 中安装 MongoDB 数据库</title>
    <link href="http://howtohowto.github.io/2014/06/01/CentOS-7-%E4%B8%AD%E5%AE%89%E8%A3%85-MongoDB%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    <id>http://howtohowto.github.io/2014/06/01/CentOS-7-中安装-MongoDB数据库/</id>
    <published>2014-06-01T05:50:43.000Z</published>
    <updated>2018-08-01T05:56:48.469Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>参考官网文档<br><a href="https://docs.mongodb.com/manual/tutorial/install-mongodb-on-red-hat/" target="_blank" rel="noopener">https://docs.mongodb.com/manual/tutorial/install-mongodb-on-red-hat/</a></p></blockquote><h2 id="一、安装"><a href="#一、安装" class="headerlink" title="一、安装"></a>一、安装</h2><h4 id="1、配置yum管理包"><a href="#1、配置yum管理包" class="headerlink" title="1、配置yum管理包"></a>1、配置yum管理包</h4><ol><li>在路径/etc/yum.repos.d/下创建文件mongodb-org-3.4.repo</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd /etc/yum.repos.d/</span><br><span class="line"></span><br><span class="line">touch mongodb-org-3.4.repo</span><br></pre></td></tr></table></figure><ol start="2"><li>在文件mongodb-org-3.4.repo中写入如下内容</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">[mongodb-org-3.4]</span><br><span class="line"></span><br><span class="line">name=MongoDB Repository</span><br><span class="line"></span><br><span class="line">baseurl=https://repo.mongodb.org/yum/redhat/$releasever/mongodb-org/3.4/x86_64/</span><br><span class="line"></span><br><span class="line">gpgcheck=1</span><br><span class="line"></span><br><span class="line">enable=1</span><br><span class="line"></span><br><span class="line">gpgkey=https://www.mongodb.org/static/pgp/server-3.4.asc</span><br></pre></td></tr></table></figure><h4 id="2、安装mongodb"><a href="#2、安装mongodb" class="headerlink" title="2、安装mongodb"></a>2、安装mongodb</h4><p>会安装mongodb-org包及其依赖包mongodb-org-server、mongodb-org-mongos、mongodb-org-shell、mongodb-org-tools</p><p>数据库实例默认在/var/lib/mongo路径下，日志默认在/var/log/mongodb路径下，也可以通过修改/etc/mongod.conf文件的storage.dbPath和systemLog.path配置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">yum install -y mongodb-org</span><br></pre></td></tr></table></figure><h4 id="3、开启mongodb服务"><a href="#3、开启mongodb服务" class="headerlink" title="3、开启mongodb服务"></a>3、开启mongodb服务</h4><p><code>service mongod start</code></p><h4 id="4、通过查看日志方式，验证服务开启成功，其中有一行为：-thread1-waiting-for-connections-on-port-27017"><a href="#4、通过查看日志方式，验证服务开启成功，其中有一行为：-thread1-waiting-for-connections-on-port-27017" class="headerlink" title="4、通过查看日志方式，验证服务开启成功，其中有一行为：[thread1] waiting for connections on port 27017"></a>4、通过查看日志方式，验证服务开启成功，其中有一行为：[thread1] waiting for connections on port 27017</h4><p><code>cat /var/log/mongodb/mongod.log</code></p><h4 id="5、设置开机启动"><a href="#5、设置开机启动" class="headerlink" title="5、设置开机启动"></a>5、设置开机启动</h4><p><code>chkconfig mongod on</code></p><h4 id="6、停止mongodb服务"><a href="#6、停止mongodb服务" class="headerlink" title="6、停止mongodb服务"></a>6、停止mongodb服务</h4><p><code>service mongod stop</code></p><h4 id="7、重启mongodb服务"><a href="#7、重启mongodb服务" class="headerlink" title="7、重启mongodb服务"></a>7、重启mongodb服务</h4><p><code>service mongod restart</code></p><h2 id="二、卸载"><a href="#二、卸载" class="headerlink" title="二、卸载"></a>二、卸载</h2><h4 id="1、停止服务"><a href="#1、停止服务" class="headerlink" title="1、停止服务"></a>1、停止服务</h4><p><code>service mongod stop</code></p><h4 id="2、删除安装的包"><a href="#2、删除安装的包" class="headerlink" title="2、删除安装的包"></a>2、删除安装的包</h4><p><code>yum erase $(rpm -qa | grep mongodb-org)</code></p><h4 id="3、删除数据及日志"><a href="#3、删除数据及日志" class="headerlink" title="3、删除数据及日志"></a>3、删除数据及日志</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">rm -r /var/log/mongodb</span><br><span class="line"></span><br><span class="line">rm -r /var/lib/mongo</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;参考官网文档&lt;br&gt;&lt;a href=&quot;https://docs.mongodb.com/manual/tutorial/install-mongodb-on-red-hat/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http
      
    
    </summary>
    
    
      <category term="linux, centos, mongodb" scheme="http://howtohowto.github.io/tags/linux-centos-mongodb/"/>
    
  </entry>
  
  <entry>
    <title>在CentOS 7中搭建 Git 服务器</title>
    <link href="http://howtohowto.github.io/2014/05/31/%E5%9C%A8CentOS-7%E4%B8%AD%E6%90%AD%E5%BB%BAGit%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    <id>http://howtohowto.github.io/2014/05/31/在CentOS-7中搭建Git服务器/</id>
    <published>2014-05-31T06:10:11.000Z</published>
    <updated>2018-07-31T13:47:43.846Z</updated>
    
    <content type="html"><![CDATA[<h1 id="在CentOS-7中搭建Git服务器"><a href="#在CentOS-7中搭建Git服务器" class="headerlink" title="在CentOS 7中搭建Git服务器"></a>在CentOS 7中搭建Git服务器</h1><ul><li>CentOS 7.x 最小安装 </li><li>配置网络连接</li></ul><h3 id="1-安装Git及创建用户"><a href="#1-安装Git及创建用户" class="headerlink" title="1. 安装Git及创建用户"></a>1. 安装Git及创建用户</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 安装Git</span><br><span class="line">$ yum install git</span><br></pre></td></tr></table></figure><p>创建一个git用户组和用户，用来运行git服务</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ groupadd git</span><br><span class="line">$ adduser git -g git</span><br><span class="line">$ passwd git  修改密码</span><br></pre></td></tr></table></figure><p>禁止git用户登录:</p><p>修改/etc/passwd文件，修改</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">$ vim /etc/passwd</span><br><span class="line"></span><br><span class="line"># 可以通过 vim的正则搜索快速定位到这行，  命名模式下  :/git:x</span><br><span class="line"></span><br><span class="line"># 找到这句, 注意1000可能是别的数字</span><br><span class="line">git:x:1000:1000::/home/git:/bin/bash</span><br><span class="line"></span><br><span class="line"># 改为：</span><br><span class="line">git:x:1000:1000::/home/git:/bin/git-shell</span><br><span class="line"></span><br><span class="line"># 最好不要直接改，可以先复制一行，然后注释掉一行，修改一行，保留原始的，这就是经验！！！</span><br><span class="line"># vim快捷键： 命令模式下：yy复制行， p 粘贴  0光标到行首 $到行尾 x删除一个字符  i进入插入模式 </span><br><span class="line"># 修改完后退出保存：  esc进入命令模式， 输入：:wq!   保存退出。</span><br></pre></td></tr></table></figure><h4 id="1-1-禁止客户端shell登录"><a href="#1-1-禁止客户端shell登录" class="headerlink" title="1-1. 禁止客户端shell登录"></a>1-1. 禁止客户端shell登录</h4><p>因为前面我们添加了客户端的ssh的公钥到远程服务器，所以客户端可以直接通过shell远程登录服务器，这不安全，也不是我们想要的。且看下面如何禁用shell登录：</p><p>第一步：<br>给 /home/git 下面创建git-shell-commands目录，并把目录的拥有者设置为git账户。可以直接用git账号登录服务器终端操作。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ su git</span><br><span class="line">$ mkdir /home/git/git-shell-commands</span><br><span class="line"><span class="comment"># 此文件夹是git-shell用到的目录，需要我们手动创建，不然报错：fatal: Interactive git shell is not enabled. hint: ~/git-shell-commands should exist and have read and execute access.</span></span><br></pre></td></tr></table></figure><p>第二步：修改/etc/passwd文件，修改</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">$ vim /etc/passwd</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 可以通过 vim的正则搜索快速定位到这行，  命名模式下  :/git:x</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 找到这句, 注意1000可能是别的数字</span></span><br><span class="line">git:x:1000:1000::/home/git:/bin/bash</span><br><span class="line"></span><br><span class="line"><span class="comment"># 改为：</span></span><br><span class="line">git:x:1000:1000::/home/git:/bin/git-shell</span><br><span class="line"></span><br><span class="line"><span class="comment"># 最好不要直接改，可以先复制一行，然后注释掉一行，修改一行，保留原始的，这就是经验！！！</span></span><br><span class="line"><span class="comment"># vim快捷键： 命令模式下：yy复制行， p 粘贴  0光标到行首 $到行尾 x删除一个字符  i进入插入模式 </span></span><br><span class="line"><span class="comment"># 修改完后退出保存：  esc进入命令模式， 输入：:wq!   保存退出。</span></span><br></pre></td></tr></table></figure><p>好了，此时我们就不用担心客户端通过shell登录，只允许使用git-shell进行管理git的仓库。</p><p>如果有其他小伙伴要连接git服务器，仅需要把他的公钥也添加到authorized_keys即可。</p><h3 id="2-创建证书登录"><a href="#2-创建证书登录" class="headerlink" title="2. 创建证书登录"></a>2. 创建证书登录</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ mkdir /home/git/.ssh</span><br><span class="line">$ chmod 700 /home/git/.ssh</span><br><span class="line">$ touch 700 /home/git/.ssh/authorized_keys</span><br><span class="line">$ chmod 600 /home/git/.ssh/authorized_keys</span><br></pre></td></tr></table></figure><p>注意，如果是采用的sudo方式来创建git和相应的文件的，需要设置/home/git/.ssh/的owner为git，否则还是每次要输入密码的。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># owner改为git</span><br><span class="line">$ sudo chown -R git:git /home/git/.ssh/</span><br></pre></td></tr></table></figure><p>编辑/home/git/.ssh/authorized_keys，把客户端的公钥放进去，1个公钥1行。</p><p>附：如何创建私钥：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 创建私钥，文件位于用户主目录里找到.ssh目录，里面有id_rsa和id_rsa.pub两个文件</span><br><span class="line">$ ssh-keygen -t rsa -C &quot;youremail@example.com&quot;</span><br></pre></td></tr></table></figure></p><h4 id="3-初始化Git仓库"><a href="#3-初始化Git仓库" class="headerlink" title="3.初始化Git仓库"></a>3.初始化Git仓库</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ cd /srv</span><br><span class="line">$ mkdir gitrepo</span><br><span class="line">$ chown git:git gitrepo/</span><br><span class="line">$ cd gitrepo</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 创建一个空的Git仓库，服务器上的Git仓库通常都以.git结尾</span><br><span class="line">$ git init --bare project.git</span><br><span class="line"></span><br><span class="line"># 将仓库所属用户改为git</span><br><span class="line">$ chown -R git:git project.git</span><br></pre></td></tr></table></figure><h3 id="4-克隆仓库"><a href="#4-克隆仓库" class="headerlink" title="4. 克隆仓库"></a>4. 克隆仓库</h3><p>在另一台电脑上（下面称为：Client），安装git，并且运行下面的命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git clone git@10.123.123.123:/srv/gitrepo/project.git</span><br></pre></td></tr></table></figure><h3 id="5-验证安装"><a href="#5-验证安装" class="headerlink" title="5. 验证安装"></a>5. 验证安装</h3><p>5.1. 推送到远程服务器<br>在本地Client的project目录下，创建一个文件：text.txt，内容随意，然后上传到远端：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git push origin master</span><br></pre></td></tr></table></figure><p>5.2. 检验<br>在本地Client的另外一个目录下，克隆一下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git clone git@10.123.123.123:/srv/gitrepo/project.git</span><br></pre></td></tr></table></figure><p>看看text.txt文件是否存在，内容是否对。</p><p>5.3. 常用的Git命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ git add . 添加所有文件  注意有个 . </span><br><span class="line">$ git commit -m &apos;注释&apos; 提交本地</span><br><span class="line">$ git push origin master提交给默认分支</span><br><span class="line">$ git -rm 删除</span><br><span class="line">$ git pull origin master 从默认分支下载</span><br><span class="line">$ git branch -v 查看所有分支</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;在CentOS-7中搭建Git服务器&quot;&gt;&lt;a href=&quot;#在CentOS-7中搭建Git服务器&quot; class=&quot;headerlink&quot; title=&quot;在CentOS 7中搭建Git服务器&quot;&gt;&lt;/a&gt;在CentOS 7中搭建Git服务器&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;
      
    
    </summary>
    
    
      <category term="Linux, centos, Git" scheme="http://howtohowto.github.io/tags/Linux-centos-Git/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://howtohowto.github.io/2012/12/31/hello-world/"/>
    <id>http://howtohowto.github.io/2012/12/31/hello-world/</id>
    <published>2012-12-30T16:01:02.000Z</published>
    <updated>2018-07-31T13:20:22.076Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
</feed>
